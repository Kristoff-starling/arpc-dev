apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  clusterIP: 10.96.88.88
  ports:
  - name: frontend
    port: 80
    targetPort: 8080
  selector:
    app: frontend
---
apiVersion: v1
kind: Pod
metadata:
  name: frontend-with-proxy
spec:
  containers:
  - name: frontend
    image: appnetorg/echo-symphony:latest
    ports:
    - containerPort: 8080
    securityContext:
      runAsUser: 1000
  - name: udp-proxy
    image: appnetorg/symphony-proxy:latest
    securityContext:
      capabilities:
        add: ["NET_ADMIN", "NET_RAW"]
      runAsUser: 1337
  initContainers:
  - name: set-iptables
    image: busybox
    securityContext:
      capabilities:
        add: ["NET_ADMIN"]
    command:
    - sh
    - -c
    - |
      iptables -t nat -A PREROUTING -p udp --sport 9000 -j REDIRECT --to-ports 15002
      iptables -t nat -A OUTPUT -p udp --dport 9000 -m owner ! --uid-owner 1337 -j REDIRECT --to-ports 15002
---
apiVersion: v1
kind: Service
metadata:
  name: server
  labels:
    app: server
spec:
  clusterIP: None
  ports:
  - name: server
    port: 9000
    protocol: UDP
    targetPort: 9000
  selector:
    app: server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
spec:
  replicas: 1
  template:
    metadata:
      name: server
      labels:
        app: server
    spec:
      containers:
      - image: appnetorg/echo-symphony:latest
        name: server-echo-symphony
        command: ["/app/server/server"]
  selector:
    matchLabels:
      app: server